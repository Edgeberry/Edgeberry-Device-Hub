# Edgeberry Device Hub â€” Mosquitto ACLs
# Ref: https://mosquitto.org/man/mosquitto-conf-5.html#acl_file
# Notes:
# - For PROD (mTLS), set `use_subject_as_username true` and the cert CN becomes the username.
# - `%u` expands to the authenticated username (CN for mTLS when configured).
# - `%c` expands to the client id (not used here).

## mTLS-only: usernames come from client cert CNs
## No password-based users required.

# --- Device identity (mTLS) ---------------------------------------------------
# Devices are identified by their certificate CN (= deviceId)
# Grant each device read/write access to its own topic namespace
pattern write devices/%u/#
pattern read  devices/%u/#

# Provisioning flow (device bootstrap over MQTT)
# Devices publish provision request and read accepted/rejected responses
# Using patterns with %u (CN) to scope per device
pattern write $devicehub/devices/%u/provision/request
pattern read  $devicehub/devices/%u/provision/accepted
pattern read  $devicehub/devices/%u/provision/rejected

# Provisioning-by-claim (shared client cert): scope by clientId instead of CN
# This allows all devices using the shared provisioning certificate to publish
# and receive only within their own clientId namespace during provisioning.
# Keep both %u and %c rules for compatibility.
pattern write $devicehub/devices/%c/provision/request
pattern read  $devicehub/devices/%c/provision/accepted
pattern read  $devicehub/devices/%c/provision/rejected

# Provisioning (open within authenticated realm): do not restrict by CN or clientId
# The server performs authorization using the whitelist UUID, so the broker
# can allow any authenticated client to use provisioning topics.
topic write $devicehub/devices/+/provision/request
topic read  $devicehub/devices/+/provision/accepted
topic read  $devicehub/devices/+/provision/rejected

# Twin flow (device twin interactions)
# Devices write get/update; read accepted/rejected + delta
pattern write $devicehub/devices/%u/twin/get
pattern write $devicehub/devices/%u/twin/update
pattern read  $devicehub/devices/%u/twin/update/accepted
pattern read  $devicehub/devices/%u/twin/update/rejected
pattern read  $devicehub/devices/%u/twin/delta

# Optionally allow devices to read public broadcast announcements (if any)
# topic read $devicehub/broadcast/#

# --- Backend service accounts -------------------------------------------------
# These blocks apply when the service connects with a client cert whose CN
# matches the username below (e.g., CN=registry, CN=twin, CN=provisioning).

# Twin service: full access for backend operations
user twin
topic readwrite #

# Provisioning service: full access for backend operations
user provisioning
topic readwrite #

# ----------------------------------------------------------------------------
# Keep service accounts least-privileged in production. Adjust above as needed.
